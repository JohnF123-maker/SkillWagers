rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can only read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow limited read access for public profile info in challenges
      allow read: if request.auth != null && 
        resource.data.keys().hasAll(['displayName', 'avatarUrl']) &&
        resource.data.keys().size() == 2;
    }
    
    // Challenges collection - read-only for authenticated users
    // All creation/updates handled by Cloud Functions
    match /challenges/{challengeId} {
      allow read: if request.auth != null;
      allow create, update, delete: if false; // Only Cloud Functions can modify
    }
    
    // Escrow collection - completely restricted
    // Only Cloud Functions can access
    match /escrow/{escrowId} {
      allow read, write: if false;
    }
    
    // Disputes collection - read for participants, write restricted
    match /disputes/{disputeId} {
      allow read: if request.auth != null && 
        (request.auth.uid in resource.data.participants || 
         request.auth.uid == resource.data.reporterId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.reporterId;
      allow update, delete: if false; // Only admins via Cloud Functions
    }
    
    // Admin collection - completely restricted
    match /admin/{document=**} {
      allow read, write: if false;
    }
    
    // System logs - completely restricted  
    match /logs/{document=**} {
      allow read, write: if false;
    }
    
    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}